<?
/*
class A {
    public function foo() {
        static $x = 0; // статическая переменная. Принадлежит классу, а не объекту. 
        echo ++$x;     // суммирование при каждом вызове
    }
}
$a1 = new A(); //$x = 0 (метод не вызывался)
$a2 = new A(); //$x = 0 (метод не вызывался)
$a1->foo(); // 0++ => 1 // ссылка объекта класса A на перемнную класса A
$a2->foo(); // 1++ => 2
$a1->foo(); // 2++ => 3
$a2->foo(); // 3++ => 4



class A {
    public function foo() { //  есть у всех объектов, в том числе прозводных классов
        static $x = 0; // статическая переменная. Принадлежит классу, а не объекту. 
        echo ++$x;     // суммирование при каждом вызове соответсвующего класса 
    }
}
class B extends A {
}

$a1 = new A(); //$x = 0 (метод не вызывался)
$b1 = new B(); //$x = 0 (метод не вызывался)
$a1->foo(); // 0++ => 1 // ссылка объекта класса A на перемнную класса A
$b1->foo(); // 0++ => 1 // ссылка объекта класса B на перемнную класса B
$a1->foo(); // 1++ => 2 
$b1->foo(); // 1++ => 2

*/


?>